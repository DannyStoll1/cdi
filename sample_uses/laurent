# we may want to merge these files together. Here is an example of how I would like to use CDI.

julia> mb = interactive_window(c->is_connected(z->z^2+c),-2.0-2im,2+2im)
# opens a window with a nice Mandelbrot set drawn in it.
julia> ju = static_window()
# opens a blank window
julia> onclick(mb,c->populate(ju,julia_set(z->z^2+c)))
# populates the blank window.
# additionally, other algorithms than julia_set would draw external rays etc.
# presumably, these windows would allow resizing etc.
# there should also exist 2D and 3D windows, for stereographic projection

# an alternative, shortcut for the previous
julia> onclick(mb,c->new_julia_set(z->z^2+c))
# on each click, opens a new window of the corresponding Julia set

julia> for i=[1,3,5,7] draw(ju,external_angle(i//8)) end

julia> p = polynomial_machine(2,[1//7])
julia> f = thurston_algorithm(mating(p,p))
julia> ju = new_julia_set(z->f(z))
julia> z = getpoint(ju)
# and we click on a point in ju, which is returned as z
julia> draw(ju,orbit(z,p,10))
# adds the orbit of the point
julia> onhover(ju,z->orbit(z,p,10))
# now whenever we move the mouse in ju, we track the orbit of z.
